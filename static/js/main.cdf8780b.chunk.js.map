{"version":3,"sources":["actions/index.js","components/Card.jsx","App.js","reducers/locationReducer.js","reducers/WeatherDataReducer.js","reducers/themeReducer.js","reducers/index.js","store.js","index.js"],"names":["updateLocation","location","type","payload","updateWeatherData","dispatch","fetch","then","response","json","data","Card","useSelector","state","weatherData","theme","useDispatch","element","icon","faBars","color","search","faSearch","calendar","faCalendar","locationIcon","faMapMarker","useEffect","className","style","height","onClick","value","onChange","e","target","onKeyUp","key","marginBottom","padding","placeholder","current","src","condition","alt","last_updated","split","temp_c","name","country","App","console","log","locationReducer","action","weatherDataReducer","themeReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdf8780b.chunk.js","sourcesContent":["const updateLocation = (location) => {\r\n  return {\r\n    type: \"UPDATE_LOCATION\",\r\n    payload: location,\r\n  };\r\n};\r\n\r\nconst updateWeatherData = (location) => {\r\n  return (dispatch) => {\r\n    fetch(\r\n      `https://api.weatherapi.com/v1/current.json?key=44a5c3b5551c45bca05154753211008&q=${location}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        dispatch({\r\n          type: \"UPDATE_WEATHER_DATA\",\r\n          payload: data\r\n        }) \r\n      });\r\n  };\r\n};\r\n\r\nconst toggleTheme = () => {\r\n  return {\r\n    type: \"TOGGLE_THEME\",\r\n  }\r\n}\r\n\r\nexport { updateLocation, updateWeatherData, toggleTheme };\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { toggleTheme } from \"../actions\";\r\n\r\n// actions\r\nimport { updateLocation, updateWeatherData } from \"../actions\";\r\n\r\nimport {\r\n  faBars,\r\n  faSearch,\r\n  faCalendar,\r\n  faMapMarker,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Card() {\r\n  const location = useSelector((state) => state.location);\r\n  const weatherData = useSelector((state) => state.weatherData);\r\n  const theme = useSelector((state) => state.theme);\r\n  const dispatch = useDispatch();\r\n\r\n  // Icons\r\n  const element = (\r\n    <FontAwesomeIcon icon={faBars} color={theme ? \"white\" : \"black\"} />\r\n  );\r\n  const search = (\r\n    <FontAwesomeIcon icon={faSearch} color={theme ? \"white\" : \"black\"} />\r\n  );\r\n  const calendar = <FontAwesomeIcon icon={faCalendar} color=\"white\" />;\r\n  const locationIcon = (\r\n    <FontAwesomeIcon icon={faMapMarker} color= \"white\" />\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(updateWeatherData(location));\r\n    dispatch(updateLocation(\"\"));\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        !theme\r\n          ? \"App dark d-flex align-items-center\"\r\n          : \"App d-flex align-items-center\"\r\n      }\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      {/* theme toggle button */}\r\n      <div className=\"toggle-theme\">\r\n        <button\r\n          className={theme ? \"theme btn-light\" : \"theme btn-dark\"}\r\n          onClick={() => {\r\n            dispatch(toggleTheme());\r\n          }}\r\n        >\r\n          {theme ? \"Dark\" : \"Light\"}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <nav className=\"w-100 navbar bg-secondary d-flex align-items-center justify-content-between\">\r\n          <div className=\"\">{element}</div>\r\n          <input\r\n            value={location}\r\n            onChange={(e) => {\r\n              dispatch(updateLocation(e.target.value));\r\n            }}\r\n            onKeyUp={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                dispatch(updateWeatherData(location));\r\n                dispatch(updateLocation(\"\"));\r\n              }\r\n            }}\r\n            style={{ marginBottom: \"0px\", padding: \"10px\" }}\r\n            type=\"text\"\r\n            placeholder=\"location\"\r\n          />\r\n          <div className=\"\">{search}</div>\r\n        </nav>\r\n        <main className=\"main d-flex flex-column\">\r\n          <div className=\"w-icon align-self-center\">\r\n            {weatherData.current ? (\r\n              <img src={weatherData.current.condition.icon} alt=\"\" />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div className=\"date  d-flex justify-content-center align-items-center text-left\">\r\n              {weatherData.current ? (\r\n                <span className=\"calendar\">{calendar}</span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              {weatherData.current\r\n                ? weatherData.current.last_updated.split(\" \")[1]\r\n                : \"\"}\r\n              <br />\r\n              {weatherData.current\r\n                ? weatherData.current.last_updated.split(\" \")[0]\r\n                : \"\"}\r\n            </div>\r\n            <div className=\"temp  d-flex justify-content-center h1 font-weight-bold\">\r\n              {weatherData.current ? (\r\n                <>{weatherData.current.temp_c}&#176;</>\r\n              ) : (\r\n                <h1>Location Not Found</h1>\r\n              )}\r\n            </div>\r\n            <div className=\"d-flex justify-content-center align-items-center text-right\">\r\n              {weatherData.current ? (\r\n                <p>\r\n                  {weatherData.location.name}\r\n                  <br></br>\r\n                  {weatherData.location.country}\r\n                </p>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {weatherData.current ? (\r\n                <span className=\"icon location\">{locationIcon}</span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import Card from './components/Card'\nimport \"./styles.css\";\nimport { useSelector } from \"react-redux\"\n\nfunction App() {\n\n  const theme = useSelector((state) => state.theme)\n  console.log(theme)\n\n  return (\n    <div>\n      <Card/> \n    </div>\n  )\n\n}\n\n\nexport default App","const locationReducer = (state=\"Mumbai\", action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_LOCATION\":\r\n      return action.payload;\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default locationReducer ","const weatherDataReducer = (state={}, action) => {\r\n    switch(action.type) {\r\n        case \"UPDATE_WEATHER_DATA\":\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default weatherDataReducer","\r\nconst themeReducer = (state=true, action) => {\r\n    switch(action.type) {\r\n        case \"TOGGLE_THEME\":\r\n            return !state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default themeReducer","import { combineReducers } from \"redux\"\r\nimport locationReducer from './locationReducer'\r\nimport weatherDataReducer from \"./WeatherDataReducer\"\r\nimport themeReducer from \"./themeReducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n    location: locationReducer,\r\n    weatherData: weatherDataReducer,\r\n    theme: themeReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}